{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Users/Users.module.css","assets/img/preloader.gif","components/Users/User/UserItem.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.module.css","components/common/FormControls/FormControl.module.css","serviceWorker.js","api/api.js","redux/profileReducer.js","redux/dialogsReducer.js","redux/navbarReducer.js","utils/objHelpers.js","redux/usersReducer.js","redux/authReducer.js","redux/appReducer.js","redux/redux-store.js","components/Navbar/NavbarFriends/NavbarFriendItem/NavbarFriendItem.jsx","components/Navbar/NavbarFriends/NavbarFriends.jsx","components/Navbar/NavbarFriends/NavbarFriendsContainer.jsx","components/Navbar/Navbar.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/common/FormControls/FormControls.jsx","utils/validators.js","components/Dialogs/NewMessageForm/NewMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirectComponent.jsx","components/Dialogs/DialogsContainer.jsx","components/Music/Music.jsx","components/News/News.jsx","components/Settings/Settings.jsx","components/common/Preloader/Preloader.jsx","components/Users/Pagination/Pagination.jsx","components/Users/User/UserItem.jsx","components/Users/Users.jsx","redux/usersSelectors.js","components/Users/UsersContainer.jsx","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/NewPostForm/NewPostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","redux/authSelectors.js","redux/profileSelectors.js","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/LoginForm/LoginForm.jsx","components/Login/Login.jsx","components/Login/LoginContainer.jsx","App.js","index.js","components/Dialogs/Dialogs.module.css","components/Navbar/NavbarFriends/NavbarFriends.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Header/Header.module.css","components/Navbar/NavbarFriends/NavbarFriendItem/NavbarFriendItem.module.css","components/Users/Pagination/Pagination.module.css","components/Profile/MyPosts/MyPosts.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","instance","Axios","create","withCredentials","headers","baseURL","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unFollow","delete","authAPI","email","password","rememberMe","userProfileAPI","status","put","initialState","profile","postsData","id","postText","likesCount","setUserProfile","type","setUserStatus","profileReducer","state","action","length","newPost","newPostText","filter","postId","messagesData","messageText","dialogsData","name","avaUrl","dialogsReducer","newMessage","newMessageText","navbarFriends","navbarReducer","updateObjectsInArray","items","objPropName","itemId","newObjProps","map","item","users","totalCount","isFetching","isFollowingProgress","followSuccess","unFollowSuccess","setUsers","toggleIsFetching","toggleIsFollowingProgress","followUnfollow","dispatch","apiMethod","a","resultCode","usersReducer","followed","userName","isAuth","setAuthUserData","getAuthUserData","login","logOut","authReducer","initialized","appReducer","reducers","combineReducers","profilePage","dialogsPage","usersPage","auth","form","formReducer","appState","store","createStore","applyMiddleware","thunk","NavbarFriendItem","props","className","style","navbarFriendItem","navbarFriendAva","src","alt","NavbarFriends","navbarFriendsList","friend","key","navbarFriendsHeader","NavbarFriendsContainer","connect","Navbar","nav","active","to","activeClassName","DialogItem","path","dialogItemAva","Message","message","Textarea","input","meta","hasError","touched","error","formControl","Input","required","value","maxLength","maxLength30","reduxForm","sendMessage","onSubmit","handleSubmit","sendMessageTextarea","Field","placeholder","component","validate","Dialogs","dialogItems","dialogData","messagesList","messageItem","dialogs","dialogsList","DialogsHeader","messages","formData","onSendMessage","mapStateToProps","withAuthRedirect","Component","RedirectComponent","this","React","compose","actionCreateSendMessage","Music","News","Settings","Preloader","preloader","Pagination","setCurrentPage","getUsersFromPage","portionSize","pagesCount","Math","ceil","pages","i","push","portionsCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","onClick","pageNumber","paginationIem","UserItem","user","userAva","photos","small","disabled","some","Users","usersList","createSelector","getPageSize","getTotalCount","getCurrentPage","getIsFetching","getIsFollowingProgress","UsersContainer","requestUsers","page","bind","ProfileStatusWithHooks","editMode","setEditMode","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","onBlur","updateUserStatus","autoFocus","ProfileInfo","profileDescription","fullName","aboutMe","Post","classes","maxLength10","MyPosts","postsList","myPosts","console","log","JSON","stringify","addPost","posts","MyPostsContainer","actionCreateAddPost","Profile","getAuthUserId","getProfile","getStatus","ProfileContainer","params","authorizedUserId","getUserProfile","getUserStatus","withRouter","Header","header","loginBlock","HeaderConatainer","formError","Login","logIn","stopSubmit","_error","App","initializeApp","HeaderContainer","render","DialogsContainer","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d062c895.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2JAyT\",\"item\":\"Navbar_item__mW7wb\",\"active\":\"Navbar_active__1rBCx\",\"navbarFriends\":\"Navbar_navbarFriends__1cWPT\",\"navbarFriendsList\":\"Navbar_navbarFriendsList__3a9KR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"currentPage\":\"Users_currentPage__2C6PQ\",\"paginationIem\":\"Users_paginationIem__2k1g7\",\"userAva\":\"Users_userAva__1IXUy\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.42012b3b.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userAva\":\"UserItem_userAva__2LKPX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileDescription\":\"ProfileInfo_profileDescription__2hYhW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2BGeQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControl_formControl__EMft-\",\"error\":\"FormControl_error__1HGmr\",\"formError\":\"FormControl_formError__ZN-_q\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import Axios from 'axios';\r\n\r\nconst instance = Axios.create(\r\n    {\r\n        withCredentials: true,  // withCredentials: true прикрепляет к запросу куки, \r\n        //т.е. сервер видит что я авторизован или не авторизован\r\n        headers: {  // API-KEY взят из аккаунта в social-network.samuraijs.com,\r\n            // его сгенерировал сервер, нужен для полного доступа к api\r\n            \"API-KEY\": \"5995d704-6605-4021-be3a-75799fb9ae6d\"\r\n        },\r\n        baseURL: 'https://social-network.samuraijs.com/api/1.0/'\r\n    });\r\n\r\nconst usersAPI = {\r\n    getUsers(currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n\r\n    },\r\n\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n            .then(response => response.data)\r\n    },\r\n\r\n    unFollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n            .then(response => response.data)\r\n    }\r\n};\r\n\r\nconst authAPI = {\r\n    authMe() {\r\n        return instance.get(`auth/me`)\r\n            .then(response => response.data)\r\n    },\r\n\r\n    logIn(email, password, rememberMe) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n            .then(response => response.data)\r\n    },\r\n\r\n    logOut() {\r\n        return instance.delete(`auth/login`)\r\n            .then(response => response.data)\r\n    }\r\n};\r\n\r\nconst userProfileAPI = {\r\n    getUserProfile(userId) {\r\n        return instance.get(`profile/${userId}`)\r\n            .then(response => response.data)\r\n    },\r\n\r\n    getUserStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n            .then(response => response.data)\r\n    },\r\n\r\n    updateUserStatus(status) {\r\n        return instance.put(`profile/status`, {\r\n            status\r\n        })\r\n            .then(response => response.data)\r\n    }\r\n};\r\n\r\nexport { usersAPI, authAPI, userProfileAPI };","import { userProfileAPI } from './../api/api';\r\n\r\nconst ADD_POST = 'ADD_POST';\r\n// const changeNewPostText = 'changeNewPostText';\r\nconst Set_User_Profile = 'Set_User_Profile';\r\nconst Set_User_Status = 'Set_User_Status';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nconst initialState = {\r\n    profile: null,\r\n    postsData: [{\r\n        id: 1,\r\n        postText: \"First post\",\r\n        likesCount: 5\r\n    },\r\n    {\r\n        id: 2,\r\n        postText: \"Second post\",\r\n        likesCount: 3\r\n    },\r\n    {\r\n        id: 3,\r\n        postText: \"some text\",\r\n        likesCount: 25\r\n    },\r\n    {\r\n        id: 4,\r\n        postText: \"more some text\",\r\n        likesCount: 1\r\n    }\r\n    ],\r\n    status: ''\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case ADD_POST: {\r\n            const id = state.postsData.length + 1;\r\n            const newPost = {\r\n                id: id,\r\n                postText: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                postsData: [...state.postsData, newPost]\r\n            };\r\n        }\r\n\r\n        // case changeNewPostText:\r\n        //     return {...state, newPostText : action.newPostText};\r\n\r\n        case Set_User_Profile:\r\n            return { ...state, profile: action.profile }\r\n\r\n        case Set_User_Status:\r\n            return { ...state, status: action.status }\r\n\r\n        case DELETE_POST:\r\n            return { ...state, postsData: state.postsData.filter(post => post.id !== action.postId) }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const actionCreateAddPost = (newPostText) => ({\r\n    type: ADD_POST,\r\n    newPostText\r\n});\r\n\r\nexport const deletePostAC = (postId) => ({\r\n    type: DELETE_POST,\r\n    postId\r\n});\r\n\r\n// const actionCreateChangeNewPostText = (newPostText) => ({\r\n//     type: changeNewPostText,\r\n//     newPostText: newPostText\r\n// });\r\n\r\nconst setUserProfile = (profile) => ({\r\n    type: Set_User_Profile,\r\n    profile\r\n});\r\n\r\nconst setUserStatus = (status) => ({\r\n    type: Set_User_Status,\r\n    status\r\n});\r\n\r\nconst addPost = (newPostText) => (dispatch) => {\r\n    dispatch(actionCreateAddPost(newPostText));\r\n};\r\n\r\nconst getUserProfile = (userId) => async (dispatch) => {  // Thunk creator\r\n    const profile = await userProfileAPI.getUserProfile(userId);\r\n    dispatch(setUserProfile(profile));\r\n};\r\n\r\nconst getUserStatus = (userId) => async (dispatch) => {\r\n    const status = await userProfileAPI.getUserStatus(userId);\r\n    dispatch(setUserStatus(status));\r\n};\r\n\r\nconst updateUserStatus = (status) => async (dispatch) => {\r\n    const response = await userProfileAPI.updateUserStatus(status);\r\n    if (response.resultCode === 0) { \r\n        dispatch(setUserStatus(status)) \r\n    } else console.log(`somesing wrong, status didn't change. response -  ${JSON.stringify(response)}`);\r\n};\r\n\r\nexport { addPost, getUserProfile, getUserStatus, updateUserStatus };\r\nexport default profileReducer;","const sendMessage = 'sendMessage';\r\n// const changeNewMessageText = 'changeNewMessageText'; // так-как обработка формы теперь осуществляется при помощи redux-form,\r\n                                                        // то и изменения текста до отправки обрабатывает redux-form\r\n\r\nconst initialState = {\r\n    messagesData: [{\r\n            id: 1,\r\n            messageText: \"Hello! How are you?\"\r\n        },\r\n        {\r\n            id: 2,\r\n            messageText: \"I'm develope my own social network\"\r\n        },\r\n        {\r\n            id: 3,\r\n            messageText: \"Wow! It's amazing!\"\r\n        },\r\n        {\r\n            id: 4,\r\n            messageText: \"Yes!\"\r\n        }\r\n    ],\r\n    dialogsData: [{\r\n            id: 1,\r\n            name: 'User 1',\r\n            avaUrl: 'http://pikchyriki.net/avatar/prikolnye/100/12.jpg'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'User 2',\r\n            avaUrl: 'http://pikchyriki.net/avatar/prikolnye/100/12.jpg'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'User 3',\r\n            avaUrl: 'http://pikchyriki.net/avatar/prikolnye/100/12.jpg'\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'User 4',\r\n            avaUrl: 'http://pikchyriki.net/avatar/prikolnye/100/12.jpg'\r\n        },\r\n        {\r\n            id: 5,\r\n            name: 'User 5',\r\n            avaUrl: 'http://pikchyriki.net/avatar/prikolnye/100/12.jpg'\r\n        },\r\n        {\r\n            id: 6,\r\n            name: 'User 6',\r\n            avaUrl: 'http://pikchyriki.net/avatar/prikolnye/100/12.jpg'\r\n        },\r\n        {\r\n            id: 7,\r\n            name: 'User 7',\r\n            avaUrl: 'http://pikchyriki.net/avatar/prikolnye/100/12.jpg'\r\n        }\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case sendMessage:\r\n            let id = state.messagesData.length + 1;\r\n            let newMessage = {\r\n                id: id,\r\n                messageText: action.newMessageText\r\n            };\r\n            return {...state,\r\n                messagesData : [...state.messagesData, newMessage]};\r\n        \r\n        // case changeNewMessageText:   // так-как обработка формы теперь осуществляется при помощи redux-form,\r\n                                        // то и изменения текста до отправки обрабатывает redux-form\r\n        //     return {...state, newMessageText : action.newMessageText};\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst actionCreateSendMessage = (newMessageText) => ({\r\n    type: sendMessage,\r\n    newMessageText\r\n\r\n});\r\n\r\n// const actionCreateChangeNewMessageText = (newMessageText) => ({  // так-как обработка формы теперь осуществляется при помощи redux-form,\r\n                                        // то и изменения текста до отправки обрабатывает redux-form\r\n//     type: changeNewMessageText,\r\n//     newMessageText: newMessageText\r\n// });\r\n\r\nexport {\r\n    actionCreateSendMessage\r\n};\r\nexport default dialogsReducer;","const initialState = {\n    navbarFriends: [{\n            id: 1,\n            name: 'Friend 1',\n            avaUrl: 'http://www.alluserpics.com/data/thumbnails/17/03178.jpg'\n        },\n        {\n            id: 2,\n            name: 'Friend 2',\n            avaUrl: 'http://www.alluserpics.com/data/thumbnails/17/03172.jpg'\n        },\n        {\n            id: 3,\n            name: 'Friend 3',\n            avaUrl: 'http://www.alluserpics.com/data/thumbnails/17/03102.jpg'\n        }\n    ]\n};\n\nconst navbarReducer = (state = initialState, action) => {\n    return state;\n};\n\nexport default navbarReducer;","const updateObjectsInArray = (items, objPropName, itemId, newObjProps) => {\r\n    return items.map(\r\n        (item) => {\r\n            if (item[objPropName] === itemId) {\r\n                return { ...item, ...newObjProps };\r\n            }\r\n            return item;\r\n        })\r\n};\r\n\r\nexport { updateObjectsInArray };","import { usersAPI } from './../api/api';\r\nimport { updateObjectsInArray } from '../utils/objHelpers';\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SETUSERS = 'SETUSERS';\r\nconst SETUSERSCOUNT = 'SETUSERSCOUNT';\r\nconst SETCURRENTPAGE = 'SETCURRENTPAGE';\r\nconst TOGGLEISFETCHING = 'TOGGLEISFETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nconst initialState = {\r\n    users: [\r\n        // { id: 1, avaUrl : 'http://www.alluserpics.com/data/thumbnails/17/03178.jpg', \r\n        //     followed: true, fullName: 'Dexter F', status: 'I am a boss', \r\n        //     location: { city: 'Schelkino', country: 'Crimea' } },\r\n        // { id: 2, avaUrl : 'http://www.alluserpics.com/data/thumbnails/17/03172.jpg', followed: true, fullName: 'Yurij Portash', status: 'I am a boss too', location: { city: 'Schelkino', country: 'Crimea' } },\r\n        // { id: 3, avaUrl : 'http://www.alluserpics.com/data/thumbnails/17/03102.jpg', followed: false, fullName: 'Daniil', status: 'I am a boss too', location: { city: 'Schelkino', country: 'Crimea' } },\r\n        // { id: 4, avaUrl : 'http://www.alluserpics.com/data/thumbnails/17/03102.jpg', followed: false, fullName: 'Lena', status: 'I am a boss too', location: { city: 'Schelkino', country: 'Crimea' } },\r\n\r\n    ],\r\n    pageSize: 10,\r\n    totalCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    isFollowingProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users : updateObjectsInArray(state.users, 'id', action.userId, { followed: true })\r\n                // users: state.users.map(   // Так работало до того как создал updateObjectsInArray\r\n                //     (user) => {\r\n                //         if (user.id === action.userId) {\r\n                //             return { ...user, followed: true };\r\n                //         }\r\n                //         return user;\r\n                //     })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users : updateObjectsInArray(state.users, 'id', action.userId, { followed: false })\r\n            }\r\n        case SETUSERS:\r\n            return { ...state, users: [...action.users] }\r\n        case SETUSERSCOUNT:\r\n            return { ...state, totalCount: action.totalCount }\r\n        case SETCURRENTPAGE:\r\n            return { ...state, currentPage: action.currentPage }\r\n        case TOGGLEISFETCHING:\r\n            return { ...state, isFetching: action.isFetching }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                isFollowingProgress:\r\n                    action.isFetching ?\r\n                        [...state.isFollowingProgress, action.userId]\r\n                        : state.isFollowingProgress.filter(userId => userId !== action.userId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst followSuccess = (userId) => ({\r\n    type: FOLLOW,\r\n    userId\r\n});\r\n\r\nconst unFollowSuccess = (userId) => ({\r\n    type: UNFOLLOW,\r\n    userId\r\n});\r\n\r\nconst setUsers = (users) => ({\r\n    type: SETUSERS,\r\n    users\r\n});\r\n\r\nconst setUsersCount = (totalCount) => ({\r\n    type: SETUSERSCOUNT,\r\n    totalCount\r\n});\r\n\r\nconst setCurrentPage = (currentPage) => ({\r\n    type: SETCURRENTPAGE,\r\n    currentPage\r\n});\r\n\r\nconst toggleIsFetching = (isFetching) => ({\r\n    type: TOGGLEISFETCHING,\r\n    isFetching\r\n});\r\n\r\nconst toggleIsFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    userId,\r\n    isFetching\r\n});\r\n\r\nconst requestUsers = (currentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        const data = await usersAPI.getUsers(currentPage, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setUsersCount(data.totalCount));\r\n    };\r\n};\r\n\r\nconst getUsersFromPage = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        const data = await usersAPI.getUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));;\r\n    }\r\n};\r\n\r\nconst followUnfollow = async (dispatch, action, apiMethod, userId) => {\r\n    dispatch(toggleIsFollowingProgress(true, userId));\r\n    const data = await apiMethod(userId);\r\n    if (data.resultCode === 0) {\r\n        dispatch(action(userId));\r\n        dispatch(toggleIsFollowingProgress(false, userId));\r\n    };\r\n}\r\n\r\nconst unFollow = (userId) => (dispatch) => {\r\n    followUnfollow(dispatch, unFollowSuccess, usersAPI.unFollow.bind(usersAPI), userId);\r\n};\r\n\r\nconst follow = (userId) => (dispatch) => {\r\n    followUnfollow(dispatch, followSuccess, usersAPI.follow.bind(usersAPI), userId);\r\n};\r\n\r\nexport {\r\n    follow, unFollow,\r\n    setCurrentPage, toggleIsFetching,\r\n    toggleIsFollowingProgress, requestUsers, getUsersFromPage\r\n};\r\n\r\nexport default usersReducer;","import { authAPI } from './../api/api';\r\nimport { stopSubmit } from 'redux-form';\r\n\r\nconst Set_Users_Data = 'Set_Users_Data';\r\nconst SET_LOGINED_USER_DATA = 'SET_LOGINED_USER_DATA';\r\n\r\nconst initialState = {\r\n    isFetching: false,\r\n    id: null,\r\n    email: '',\r\n    userName: '',\r\n    isAuth: null\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case Set_Users_Data:\r\n            return { ...state, ...action.data }\r\n        case SET_LOGINED_USER_DATA:\r\n            return { ...state, id: action.id, isAuth: true }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst setAuthUserData = (id, email, userName, isAuth) => ({\r\n    type: Set_Users_Data,\r\n    data: {\r\n        id,\r\n        email,\r\n        userName,\r\n        isAuth\r\n    }\r\n});\r\n\r\nconst getAuthUserData = () => async (dispatch) => {\r\n    const data = await authAPI.authMe();\r\n    if (data.resultCode === 0) {\r\n        let { id, email, login } = data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n};\r\n\r\nconst logIn = (formData) => async (dispatch) => {\r\n    let { email, password, rememberMe = false } = { ...formData }\r\n    const data = await authAPI.logIn(email, password, rememberMe);\r\n    if (data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    } else if (data.resultCode === 1) {\r\n        // let action = stopSubmit('logIn', {_error : `${data.messages[0]}`});\r\n        dispatch(stopSubmit('logIn', { _error: `${data.messages[0]}` }));\r\n    };\r\n};\r\n\r\nconst logOut = () => async (dispatch) => {\r\n    const data = await authAPI.logOut();\r\n    if (data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n};\r\n\r\nexport { getAuthUserData, logIn, logOut };\r\nexport default authReducer;","import { getAuthUserData } from './authReducer';\r\n\r\nconst INITIALIZED_SUCSESS = 'INITIALIZED_SUCSESS';\r\n\r\nconst initialState = {\r\n    initialized : false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case INITIALIZED_SUCSESS:\r\n            return { ...state, initialized : true }\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst setInitialized = () => ({\r\n    type: INITIALIZED_SUCSESS\r\n});\r\n\r\nconst initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    promise.then(() => {\r\n        dispatch(setInitialized())\r\n    })\r\n};\r\n\r\nexport { initializeApp };\r\nexport default appReducer;","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport profileReducer from './profileReducer';\r\nimport dialogsReducer from './dialogsReducer';\r\nimport navbarReducer from './navbarReducer';\r\nimport usersReducer from './usersReducer';\r\nimport authReducer from './authReducer';\r\nimport thunk from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from './appReducer';\r\n\r\nlet reducers = combineReducers({\r\n    profilePage : profileReducer,\r\n    dialogsPage : dialogsReducer,\r\n    navbarFriends : navbarReducer,\r\n    usersPage: usersReducer,\r\n    auth : authReducer,\r\n    form : formReducer,\r\n    appState : appReducer\r\n})\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport style from './NavbarFriendItem.module.css';\n\nconst NavbarFriendItem = (props) => {\n    return (\n        <div className = {style.navbarFriendItem}>\n            <div>\n                <img className={style.navbarFriendAva} \n                    src = {props.state.avaUrl} \n                    alt = 'avka'/>\n            </div>\n            <div>\n                {props.state.name}\n            </div>\n        </div>\n    )\n}\n\nexport default NavbarFriendItem;","import React from 'react';\nimport style from './NavbarFriends.module.css';\nimport NavbarFriendItem from './NavbarFriendItem/NavbarFriendItem';\n\nconst NavbarFriends = (props) => {\n    let navbarFriendsList = props.state.map(\n        friend => <NavbarFriendItem state = {friend} key = {friend.id} />\n    );\n    return (\n        <div className = {style.navbarFriends}>\n                <h3 className={style.navbarFriendsHeader}>Friends</h3>\n                <div className = {style.navbarFriendsList}>\n                    {navbarFriendsList}\n                </div>\n        </div>\n    )\n}\n\nexport default NavbarFriends","import NavbarFriends from './NavbarFriends';\r\nimport {connect} from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n\t\tstate: state.navbarFriends.navbarFriends\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {}\r\n};\r\n\r\nconst NavbarFriendsContainer = connect(mapStateToProps, mapDispatchToProps)(NavbarFriends);\r\n\r\nexport default NavbarFriendsContainer","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport style from './Navbar.module.css';\r\nimport NavbarFriendsContainer from './NavbarFriends/NavbarFriendsContainer';\r\n\r\nconst Navbar = (props) => {\r\n    return (\r\n        <nav className={style.nav}>\r\n            <div className={`${style.item} ${style.active}`}>\r\n                <NavLink to='/profile' activeClassName={style.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to='/dialogs' activeClassName={style.active}>Dialogs</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to='/news' activeClassName={style.active}>News</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to='/music' activeClassName={style.active}>Music</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to='/settings' activeClassName={style.active}>Settings</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to='/users' activeClassName={style.active}>Users</NavLink>\r\n            </div>\r\n            <NavbarFriendsContainer />\r\n      </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\nimport style from './DialogItem.module.css';\nimport {NavLink} from 'react-router-dom';\n\nconst DialogItem = (props) => {\n    let path = '/dialogs/' + props.id;\n    return (\n        <div className={style.item}>\n            <img className = {style.dialogItemAva} \n                src = {props.avaUrl} alt = 'ava'/>\n            <NavLink to={path} activeClassName={style.active} >{props.name}</NavLink>\n        </div>\n    )\n}\n\nexport default DialogItem;","import React from 'react';\nimport style from './Message.module.css';\n\nconst Message = (props) => {\n    return (\n        <div className={style.message}>\n            {`${props.messageText}`}\n        </div>\n    )\n}\n\nexport default Message;","import React from 'react';\r\nimport style from './FormControl.module.css';\r\n\r\nconst Textarea = ({input, meta, ...props}) => {   // Создаем свои инпуты, которые будем передвать в redux-form\r\n    const hasError = meta.touched && meta.error;\r\n    return <div className={`${style.formControl} ${hasError ? style.error : ''}`}>\r\n       <div>\r\n            <textarea {...input} {...props} />\r\n        </div>\r\n        <div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>  \r\n        {/* Логическое И (&&) \"спотыкается\" на false. Если левая часть истина, а вторая нет, то И вернет вторую часть */}\r\n    </div>\r\n};\r\n\r\nconst Input = ({input, meta, ...props}) => {   // Создаем свои инпуты, которые будем передвать в redux-form\r\n    const hasError = meta.touched && meta.error;\r\n    return <div className={`${style.formControl} ${hasError ? style.error : ''}`}>\r\n       <div>\r\n            <input {...input} {...props} />\r\n        </div>\r\n        <div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>  \r\n        {/* Логическое И (&&) \"спотыкается\" на false. Если левая часть истина, а вторая нет, то И вернет вторую часть */}\r\n    </div>\r\n};\r\n\r\nconst Checkbox = ({input, meta, ...props}) => {   // Создаем свои инпуты, которые будем передвать в redux-form\r\n    const hasError = meta.touched && meta.error;\r\n    return <div className={`${style.formControl} ${hasError ? style.error : ''}`}>\r\n       <div>\r\n            <input {...input} {...props} />\r\n        </div>\r\n        <div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>  \r\n        {/* Логическое И (&&) \"спотыкается\" на false. Если левая часть истина, а вторая нет, то И вернет вторую часть */}\r\n    </div>\r\n};\r\n\r\nexport { Textarea, Input, Checkbox };","const required = (value) => {\r\n    if (value) {\r\n        return undefined;\r\n    }\r\n    return 'Field is required';\r\n};\r\n\r\nconst maxLength = (length) => {\r\n    return (value) => {\r\n        if (value && value.length > length) {\r\n            return `Max length is ${length} symbols`\r\n        } return undefined;\r\n    }\r\n};\r\n\r\nexport { required, maxLength };","import React from 'react';\r\nimport style from './../Dialogs.module.css';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../../common/FormControls/FormControls';\r\nimport { required, maxLength } from '../../../utils/validators';\r\n\r\nconst maxLength30 = maxLength(30);\r\n\r\n\r\nconst NewMessageForm = (props) => {\r\n    return <div className={style.sendMessage}>\r\n        <form onSubmit={props.handleSubmit} >\r\n            <div className={style.sendMessageTextarea}>\r\n                <Field\r\n                    placeholder='new message'\r\n                    name='newMessageText'\r\n                    component={Textarea}\r\n                    type='text'\r\n                    validate={[required, maxLength30]} />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\" >Send message</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n};\r\n\r\nexport default reduxForm({ form: 'newMessageForm' })(NewMessageForm);","import React from 'react';\r\nimport style from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { Redirect } from 'react-router-dom';\r\nimport NewMessageForm from './NewMessageForm/NewMessageForm';\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogItems = props.dialogsData\r\n        .map(dialogData => <DialogItem\r\n            name={dialogData.name}\r\n            id={dialogData.id}\r\n            avaUrl={dialogData.avaUrl}\r\n            key={dialogData.id} />);\r\n\r\n    let messagesList = props.messagesData\r\n        .map(messageItem => <Message\r\n            messageText={messageItem.messageText}\r\n            key={messageItem.id} />);\r\n\r\n    // let newMessage = React.createRef();  // так-как обработка формы теперь осуществляется при помощи redux-form,\r\n                                        // то и изменения текста до отправки обрабатывает redux-form\r\n\r\n    // let onSendMessage = () => {\r\n    //     props.onSendMessage();\r\n    // };\r\n\r\n    // let onMessageChange = () => {\r\n    //     let text = newMessage.current.value;\r\n    //     props.onMessageChange(text);\r\n    // };\r\n\r\n    if (!props.isAuth) {\r\n        return <Redirect to='/login' />\r\n    };\r\n\r\n    const onSubmit = (formData) => {\r\n        props.onSendMessage(formData.newMessageText);\r\n    };\r\n\r\n   \r\n    return (\r\n        <div className={style.dialogs}>\r\n            <div className={style.dialogsList}>\r\n                <span className={style.DialogsHeader}>Dialogs list</span>\r\n                {dialogItems}\r\n            </div>\r\n            <div className={style.messages}>\r\n                {messagesList}\r\n\r\n                <NewMessageForm  onSubmit={onSubmit} />\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile : state.profilePage.profile,\r\n    isAuth : state.auth.isAuth\r\n  });\r\n\r\nconst withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n                return <Redirect to='/login' />\r\n              }\r\n              return <Component { ...this.props } />\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToProps, {})(RedirectComponent);\r\n};\r\n\r\n// const withAuthRedirectLoginPage = (Component) => {\r\n//     class RedirectComponent extends React.Component {\r\n//         render() {\r\n//             if (this.props.isAuth) {\r\n//                 return <Redirect />\r\n//             }\r\n//         }\r\n//     }\r\n// }\r\n\r\nexport default withAuthRedirect;","import { actionCreateSendMessage} from '../../redux/dialogsReducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport withAuthRedirect from '../../hoc/withAuthRedirectComponent';\r\nimport { compose } from 'redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsData: state.dialogsPage.dialogsData,\r\n        messagesData: state.dialogsPage.messagesData,\r\n        newMessageText: state.dialogsPage.newMessageText\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onSendMessage: (newMessageText) => {\r\n            dispatch(actionCreateSendMessage(newMessageText));\r\n        }\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);","import React from 'react';\n// import style from './Music.module.css'\n\nconst Music = (props) => {\n    return (\n        <div>\n            Music\n        </div>\n    )\n}\n\nexport default Music;","import React from 'react';\n// import style from './News.module.css'\n\nconst News = (props) => {\n    return (\n        <div>\n            News\n        </div>\n    )\n}\n\nexport default News;","import React from 'react';\n// import style from './Settings.module.css'\n\nconst Settings = (props) => {\n    return (\n        <div>\n            Settings\n        </div>\n    )\n}\n\nexport default Settings;","import React from 'react';\r\nimport preloader from './../../../assets/img/preloader.gif';\r\n\r\nconst Preloader = (props) => {\r\n    return (\r\n        <img src = { preloader } alt='preloader'/>\r\n    )\r\n}\r\n\r\nexport default Preloader;","import React, {useState} from 'react';\r\nimport style from './Pagination.module.css';\r\n\r\nconst Pagination = ({totalCount, pageSize, currentPage, setCurrentPage, getUsersFromPage, portionSize = 10}) => {\r\n    const pagesCount = Math.ceil(totalCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    };\r\n\r\n    const portionsCount = Math.ceil(totalCount / portionSize);\r\n    const [portionNumber, setPortionNumber] = useState(1);\r\n    const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    const rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return <div>\r\n        { portionNumber > 1 ? <button onClick={() => setPortionNumber(portionNumber - 1)}>Prev</button> : `` }\r\n        { pages.filter((pageNumber) => pageNumber >= leftPortionPageNumber && pageNumber <= rightPortionPageNumber)\r\n            .map((pageNumber) => {\r\n                return <span key={pageNumber} \r\n                        onClick={() => {\r\n                            setCurrentPage(pageNumber);\r\n                            getUsersFromPage(pageNumber);\r\n                        }} \r\n                        className={currentPage === pageNumber ? style.currentPage : style.paginationIem}> \r\n                        {pageNumber}\r\n                    </span>\r\n            }) }\r\n        { portionsCount > portionNumber ? <button onClick={() => setPortionNumber(portionNumber + 1)} >Next</button> : `` }\r\n    </div>\r\n\r\n    // return pages.map((pageNumber) => {\r\n    //     return ({portionNumber > 1 && <button onClick={() => {setPortionNumber(portionNumber - 1)}} >Prev</button> }\r\n    //     <span key={pageNumber}\r\n    //         onClick={() => {\r\n    //             setCurrentPage(pageNumber);\r\n    //             getUsersFromPage(pageNumber);\r\n    //         }}\r\n    //         className={currentPage === pageNumber ? style.currentPage : style.paginationIem}>\r\n    //         {pageNumber}\r\n    //     </span>)\r\n    // });\r\n};\r\n\r\nexport default Pagination;","import React from 'react';\r\nimport style from './UserItem.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst UserItem = ({ user, isFollowingProgress, follow, unFollow }) => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <NavLink to={`/profile/${user.id}`}>\r\n                    <img className={style.userAva}\r\n                        src={user.photos.small != null ?\r\n                            user.photos.small\r\n                            : 'http://www.alluserpics.com/data/thumbnails/17/03178.jpg'}\r\n                        alt='my ava' />\r\n                </NavLink>\r\n                {user.followed ?\r\n                    <button disabled={isFollowingProgress.some(id => id === user.id)}\r\n                        onClick={() => {\r\n                            unFollow(user.id);\r\n                        }\r\n                        } >Unfollow</button>\r\n                    : <button disabled={isFollowingProgress.some(id => id === user.id)}\r\n                        onClick={() => {\r\n                            follow(user.id);\r\n                        }\r\n                        } >Follow</button>}\r\n            </div>\r\n            <div>\r\n                <span>{user.name}</span>\r\n                <div>\r\n                    <span>{user.status}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserItem;","import React from 'react';\r\nimport style from './Users.module.css';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport Pagination from './Pagination/Pagination';\r\nimport UserItem from './User/UserItem';\r\n\r\nconst Users = (props) => {\r\n    return <div>\r\n            {props.isFetching ? <Preloader /> : null}\r\n            <div>\r\n                <Pagination\r\n                    totalCount={props.totalCount}\r\n                    pageSize={props.pageSize}\r\n                    currentPage={props.currentPage}\r\n                    setCurrentPage={props.setCurrentPage}\r\n                    getUsersFromPage={props.getUsersFromPage} />\r\n            </div>\r\n            <div className={style.usersList}>\r\n                {/* <button onClick={props.getUsers} >Get Users</button> */}\r\n                <div>\r\n                    {props.users.map(\r\n                        user => <UserItem\r\n                                user={user}\r\n                                isFollowingProgress={props.isFollowingProgress}\r\n                                follow={props.follow}\r\n                                unFollow={props.unFollow}\r\n                                key={user.id} />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n};\r\n\r\nexport default Users;","import { createSelector } from \"reselect\";\r\n\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users\r\n};\r\n\r\nconst getUsers = createSelector(getUsersSelector, (users) => {  // Просто чтобы попробовать библиотеку reselect\r\n    return users.filter(user => true);\r\n})\r\n\r\nconst getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n};\r\n\r\nconst getTotalCount = (state) => {\r\n    return state.usersPage.totalCount\r\n};\r\n\r\nconst getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n};\r\n\r\nconst getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n};\r\n\r\nconst getIsFollowingProgress = (state) => {\r\n    return state.usersPage.isFollowingProgress\r\n};\r\n    \r\nexport { getUsers, getPageSize, getTotalCount, getCurrentPage, getIsFetching, getIsFollowingProgress };","import { connect } from 'react-redux';\r\nimport React from 'react';\r\nimport { compose } from 'redux';\r\nimport Users from './Users';\r\nimport { follow, unFollow, \r\n    setCurrentPage, requestUsers, \r\n    getUsersFromPage } from '../../redux/usersReducer';\r\nimport withAuthRedirect from '../../hoc/withAuthRedirectComponent';\r\nimport { getUsers, getPageSize, getTotalCount, getCurrentPage, getIsFetching, getIsFollowingProgress } from '../../redux/usersSelectors';\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.requestUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    getUsersFromPage(page) {\r\n        this.props.getUsersFromPage(page, this.props.pageSize)\r\n    }\r\n    \r\n    render() {\r\n        return (<Users\r\n            setCurrentPage={this.props.setCurrentPage}\r\n            getUsersFromPage={this.getUsersFromPage.bind(this)}\r\n            currentPage={this.props.currentPage}\r\n            users={this.props.users}\r\n            unFollow={this.props.unFollow}\r\n            follow={this.props.follow}\r\n            isFetching={this.props.isFetching}\r\n            isFollowingProgress={this.props.isFollowingProgress}\r\n            totalCount={this.props.totalCount}\r\n            pageSize={this.props.pageSize} />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalCount: getTotalCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        isFollowingProgress : getIsFollowingProgress(state)\r\n    }\r\n};\r\n\r\nexport default compose(connect(mapStateToProps, \r\n    {follow, unFollow, \r\n        setCurrentPage, requestUsers, \r\n        getUsersFromPage }),\r\n        withAuthRedirect)(UsersContainer)","import React, { useState, useEffect } from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const deactivateEditMode = (e) => {\r\n        setEditMode(false); \r\n        props.updateUserStatus(status);\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n\r\n    useEffect(() => {   // При изменении props.status будет заново устанавливаться setStatus\r\n        setStatus(props.status) // т.е. будет срабатывать только при изменении props\r\n    }, [props.status]);\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode} >My status: {status}</span>\r\n                </div>}\r\n            {editMode &&\r\n                <div>\r\n                    <input\r\n                        onChange={onStatusChange}\r\n                        type=\"text\"\r\n                        value={status}\r\n                        onBlur={deactivateEditMode}\r\n                        autoFocus={true} />\r\n                </div>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport style from './ProfileInfo.module.css';\r\nimport Preloader from './../../common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from './ProfileStatus/ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = (props) => {\r\n\tif (!props.profile) {\r\n\t\treturn <Preloader />\r\n\t}\r\n\treturn <div>\r\n\t\t\t<div className={style.profileDescription}>\r\n\t\t\t\t<ProfileStatusWithHooks status={ props.status } updateUserStatus={ props.updateUserStatus } />\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<img src={\r\n\t\t\t\t\t\t\tprops.profile.photos.small ?\r\n\t\t\t\t\t\t\t\tprops.profile.photos.small\r\n\t\t\t\t\t\t\t\t: 'http://www.alluserpics.com/data/thumbnails/17/03178.jpg'}\r\n\t\t\t\t\t\t\talt='ava-small' />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<span>Name: {props.profile.fullName}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<span>About me: </span><span>{props.profile.aboutMe}</span>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n};\r\n\r\nexport default ProfileInfo;","import React from 'react';\nimport classes from './Post.module.css';\n\nconst Post = (props) => {\n  return (\n        <div className={classes.item}>\n            {props.message}\n            <div>\n              <span>{props.likesCount} likes</span>\n            </div>\n        </div>\n  )\n}\n\nexport default Post;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required, maxLength } from './../../../../utils/validators';\r\nimport { Textarea } from '../../../common/FormControls/FormControls';\r\n\r\nconst maxLength10 = maxLength(10); //Нужно создавать вне компоненты, иначе будет бесконечная отрисовка\r\nconst NewPostForm = (props) => {\r\n    return <div>\r\n        <form onSubmit={props.handleSubmit} >\r\n            <div>\r\n                <Field\r\n                    validate={[required, maxLength10]}\r\n                    placeholder='new post'\r\n                    name='newPostText'\r\n                    component={Textarea}\r\n                    type='text' />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\" >Add post</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n};\r\n\r\nexport default reduxForm({ form: 'newPostForm' })(NewPostForm);","import React from 'react';\r\nimport style from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport NewPostForm from './NewPostForm/NewPostForm';\r\n\r\nconst MyPosts = (props) => {\r\n\tlet postsList = props.postsData\r\n\t\t.map(post => <Post message={post.postText} likesCount={post.likesCount} key={post.id} />);\r\n\r\n\t// let newPostElement = React.createRef();\r\n\r\n\t// const onPostChange = () => {\r\n\t// \tlet text = newPostElement.current.value;\r\n\t// \tprops.onPostChange(text);\r\n\t// };\r\n\r\n\t// const addPost = () => {\r\n\t// \tprops.addPost();\r\n\t// };\r\n\r\n    const onSubmit = (formData) => {\r\n\t\tconsole.log(`formData - ${JSON.stringify(formData)}`);\r\n\t\tprops.addPost(formData.newPostText);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={style.myPosts}>\r\n\t\t\tmy posts\r\n          \t<div>\r\n\t\t\t\t<NewPostForm onSubmit={ onSubmit } />\r\n\t\t\t</div>\r\n\t\t\t<div className={style.posts}>\r\n\t\t\t\t{postsList}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default MyPosts;","import { addPost } from './../../../redux/profileReducer';\r\nimport MyPosts from './MyPosts';\r\nimport {connect} from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => ({\r\n\t\tpostsData: state.profilePage.postsData,\r\n\t\tnewPostText: state.profilePage.newPostText\r\n    });\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, { addPost })(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n  return <div>\r\n      <ProfileInfo { ...props } />\r\n      <MyPostsContainer />\r\n    </div>\r\n};\r\n\r\nexport default Profile;","const getAuthUserId = (state) => {\r\n    return state.auth.id;\r\n};\r\n\r\nexport { getAuthUserId };","const getProfile = (state) => {\r\n    return state.profilePage.profile;\r\n};\r\n\r\nconst getStatus = (state) => {\r\n    return state.profilePage.status;\r\n};\r\n\r\n\r\nexport { getProfile, getStatus };","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getUserStatus, updateUserStatus } from './../../redux/profileReducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport withAuthRedirect from '../../hoc/withAuthRedirectComponent';\r\nimport { compose } from 'redux';\r\nimport { getAuthUserId } from '../../redux/authSelectors';\r\nimport { getProfile, getStatus } from '../../redux/profileSelectors';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n\tcomponentDidMount() {\r\n\t\tlet userId = this.props.match.params.userId; // Выхватываем userId из адресной строки (url)\r\n\t\tif (!userId) {\r\n\t\t\tuserId = this.props.authorizedUserId;\r\n\t\t};\r\n\t\tthis.props.getUserProfile(userId);\r\n\t\tthis.props.getUserStatus(userId);\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Profile {...this.props} />\r\n\t\t)\r\n\t}\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tprofile: getProfile(state),\r\n\tstatus: getStatus(state),\r\n\tauthorizedUserId: getAuthUserId(state)\r\n});\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, { getUserProfile, getUserStatus, updateUserStatus }),\r\n\twithRouter,\r\n\twithAuthRedirect\r\n)(ProfileContainer);","import React from 'react';\r\nimport style from './Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={style.header}>\r\n            <img\r\n                src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRW1qL2UGNRENFDzCrqI2f-4w8JJUdbXTUYucNacGlqZEPpbTzR'\r\n                alt='logo' />\r\n            <div className={style.loginBlock}>\r\n                {props.isAuth ?\r\n                    <div>\r\n                        <NavLink to={`/profile/${props.id}`} >\r\n                            <span className={style.userName}>{props.userName}</span>\r\n                        </NavLink>\r\n                        <button onClick={props.logOut} >Log Out</button>\r\n                    </div>\r\n\r\n                    : <NavLink to='/login' >Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { logOut } from './../../redux/authReducer';\r\nimport Header from './Header';\r\n\r\nclass HeaderConatainer extends React.Component {\r\n    \r\n    render() {\r\n        return (\r\n            <Header {...this.props} />\r\n        )\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth : state.auth.isAuth,\r\n    userName : state.auth.userName,\r\n    id : state.auth.id\r\n});\r\n\r\nexport default connect(mapStateToProps, { logOut })(HeaderConatainer);\r\n","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Input } from '../../common/FormControls/FormControls';\r\nimport { required } from '../../../utils/validators';\r\nimport style from './../../common/FormControls/FormControl.module.css';\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div>\r\n            <Field\r\n                placeholder='email'\r\n                name='email'\r\n                component={Input}\r\n                type='text' \r\n                validate={[required]} />\r\n        </div>\r\n        <div>\r\n            <Field\r\n                placeholder='password'\r\n                name='password'\r\n                component={Input}\r\n                type='text'\r\n                validate={[required]} />\r\n        </div>\r\n        <div>\r\n            <Field\r\n                name='rememberMe'\r\n                component={Input}\r\n                type='checkbox' /> Remember Me\r\n        </div>\r\n        {error ? \r\n        <div className={style.formError}>\r\n            <span>{error}</span>\r\n        </div>\r\n        : ''\r\n        }\r\n        <button type=\"submit\">Sign In</button>\r\n    </form>\r\n};\r\n\r\nexport default reduxForm({ form: 'logIn' })(LoginForm);","import React from 'react';\r\nimport LoginForm from './LoginForm/LoginForm';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst Login = ({logIn, isAuth, id}) => {\r\n    \r\n    const onSubmit = (formData) => {\r\n        logIn(formData);\r\n    };\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={`/profile/${id}`} />\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginForm onSubmit={onSubmit} />\r\n    </div>\r\n};\r\n\r\nexport default Login;","import { logIn, logOut } from '../../redux/authReducer';\r\nimport Login from './Login';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth : state.auth.isAuth,\r\n        login : state.auth.login,\r\n        id : state.auth.id\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {logIn, logOut})\r\n)(Login);","import React from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\r\nimport Music from './components/Music/Music';\r\nimport News from './components/News/News';\r\nimport Settings from './components/Settings/Settings';\r\nimport { Route } from 'react-router-dom';\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport ProfileContainer from './components/Profile/ProfileContainer';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport LoginPage from './components/Login/LoginContainer';\r\nimport { compose } from 'C:/Users/Dexter/AppData/Local/Microsoft/TypeScript/3.6/node_modules/redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { initializeApp } from './redux/appReducer';\r\nimport Preloader from './components/common/Preloader/Preloader';\r\n\r\nclass App extends React.Component {\r\n\r\n\tcomponentDidMount() {\r\n        this.props.initializeApp();\r\n\t}\r\n\t\r\n\trender() {\r\n\t\tif (!this.props.initialized) {\r\n\t\t\treturn <Preloader />\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div className=\"app-wrapper\">\r\n\t\t\t\t<HeaderContainer />\r\n\t\t\t\t<Navbar />\r\n\t\t\t\t<div className=\"app-wrapper-content\">\r\n\t\t\t\t\t<Route path='/login'\r\n\t\t\t\t\t\trender={() => <LoginPage />} />\r\n\t\t\t\t\t<Route path='/profile/:userId?'\r\n\t\t\t\t\t\trender={() => <ProfileContainer />} />\r\n\r\n\t\t\t\t\t<Route path='/dialogs'\r\n\t\t\t\t\t\trender={() => <DialogsContainer />} />\r\n\r\n\t\t\t\t\t<Route path='/users'\r\n\t\t\t\t\t\trender={() => <UsersContainer />} />\r\n\r\n\t\t\t\t\t<Route path='/music' component={Music} />\r\n\t\t\t\t\t<Route path='/news' component={News} />\r\n\t\t\t\t\t<Route path='/settings' component={Settings} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tinitialized : state.appState.initialized\r\n});\r\n\r\nexport default compose(withRouter,\r\n\tconnect(mapStateToProps, {initializeApp}))(App);\r\n","import './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/redux-store';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n    <HashRouter>\n        {/* Для того чтобы на Git-Hub Pages работала навигация, роутинг сделан через HashRouter, \n        для работы сайта не на гитхабе нужен BrowserRouter */}\n        <Provider store={store} >\n            <App />\n        </Provider>\n    </HashRouter>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1S21S\",\"dialogsList\":\"Dialogs_dialogsList__1YeBm\",\"DialogsHeader\":\"Dialogs_DialogsHeader__2WNM5\",\"messages\":\"Dialogs_messages__dqca3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbarFriends\":\"NavbarFriends_navbarFriends__3BNP3\",\"navbarFriendsHeader\":\"NavbarFriends_navbarFriendsHeader__1s5rw\",\"navbarFriendsList\":\"NavbarFriends_navbarFriendsList__1MtAV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"DialogItem_item__3x3Pv\",\"active\":\"DialogItem_active__1Vp0j\",\"dialogItemAva\":\"DialogItem_dialogItemAva__1KNmp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1JFua\",\"loginBlock\":\"Header_loginBlock__40PZF\",\"userName\":\"Header_userName__1By2b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbarFriendAva\":\"NavbarFriendItem_navbarFriendAva__3V76-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"currentPage\":\"Pagination_currentPage__1W46q\",\"paginationIem\":\"Pagination_paginationIem__10a1-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__1Dm4o\",\"posts\":\"MyPosts_posts__1OWwY\"};"],"sourceRoot":""}